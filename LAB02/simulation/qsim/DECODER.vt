// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "10/27/2023 14:51:46"
                                                                        
// Verilog Self-Checking Test Bench (with test vectors) for design :    DECODER
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module DECODER_vlg_vec_tst();
// constants                                           
// general purpose registers
reg E0;
reg E1;
reg E2;
reg E3;
// wires                                               
wire S0;
wire S1;
wire S2;
wire S3;
wire S4;
wire S5;
wire S6;
wire S7;
wire S8;
wire S9;
wire S10;
wire S11;
wire S12;
wire S13;
wire S14;
wire S15;

// assign statements (if any)                          
DECODER i1 (
// port map - connection between master ports and signals/registers   
	.E0(E0),
	.E1(E1),
	.E2(E2),
	.E3(E3),
	.S0(S0),
	.S1(S1),
	.S2(S2),
	.S3(S3),
	.S4(S4),
	.S5(S5),
	.S6(S6),
	.S7(S7),
	.S8(S8),
	.S9(S9),
	.S10(S10),
	.S11(S11),
	.S12(S12),
	.S13(S13),
	.S14(S14),
	.S15(S15)
);
initial 
begin 
#1000000 $finish;
end 
initial 
begin 
#1000000 $finish;
end 
endmodule

