// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "12/04/2023 22:20:44"

// 
// Device: Altera EP4CGX15BF14C6 Package FBGA169
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module CODER (
	s,
	e);
output 	[2:0] s;
input 	[7:0] e;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \e[0]~input_o ;
wire \s[2]~output_o ;
wire \s[1]~output_o ;
wire \s[0]~output_o ;
wire \e[7]~input_o ;
wire \e[5]~input_o ;
wire \e[6]~input_o ;
wire \e[4]~input_o ;
wire \inst3~0_combout ;
wire \e[3]~input_o ;
wire \e[2]~input_o ;
wire \inst2~0_combout ;
wire \e[1]~input_o ;
wire \inst1~0_combout ;


cycloneiv_io_obuf \s[2]~output (
	.i(\inst3~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[2]~output .bus_hold = "false";
defparam \s[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneiv_io_obuf \s[1]~output (
	.i(\inst2~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[1]~output .bus_hold = "false";
defparam \s[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneiv_io_obuf \s[0]~output (
	.i(\inst1~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[0]~output .bus_hold = "false";
defparam \s[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneiv_io_ibuf \e[7]~input (
	.i(e[7]),
	.ibar(gnd),
	.o(\e[7]~input_o ));
// synopsys translate_off
defparam \e[7]~input .bus_hold = "false";
defparam \e[7]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_io_ibuf \e[5]~input (
	.i(e[5]),
	.ibar(gnd),
	.o(\e[5]~input_o ));
// synopsys translate_off
defparam \e[5]~input .bus_hold = "false";
defparam \e[5]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_io_ibuf \e[6]~input (
	.i(e[6]),
	.ibar(gnd),
	.o(\e[6]~input_o ));
// synopsys translate_off
defparam \e[6]~input .bus_hold = "false";
defparam \e[6]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_io_ibuf \e[4]~input (
	.i(e[4]),
	.ibar(gnd),
	.o(\e[4]~input_o ));
// synopsys translate_off
defparam \e[4]~input .bus_hold = "false";
defparam \e[4]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_lcell_comb \inst3~0 (
// Equation(s):
// \inst3~0_combout  = (\e[7]~input_o ) # ((\e[5]~input_o ) # ((\e[6]~input_o ) # (\e[4]~input_o )))

	.dataa(\e[7]~input_o ),
	.datab(\e[5]~input_o ),
	.datac(\e[6]~input_o ),
	.datad(\e[4]~input_o ),
	.cin(gnd),
	.combout(\inst3~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst3~0 .lut_mask = 16'hFFFE;
defparam \inst3~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiv_io_ibuf \e[3]~input (
	.i(e[3]),
	.ibar(gnd),
	.o(\e[3]~input_o ));
// synopsys translate_off
defparam \e[3]~input .bus_hold = "false";
defparam \e[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_io_ibuf \e[2]~input (
	.i(e[2]),
	.ibar(gnd),
	.o(\e[2]~input_o ));
// synopsys translate_off
defparam \e[2]~input .bus_hold = "false";
defparam \e[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_lcell_comb \inst2~0 (
// Equation(s):
// \inst2~0_combout  = (\e[7]~input_o ) # ((\e[6]~input_o ) # ((\e[3]~input_o ) # (\e[2]~input_o )))

	.dataa(\e[7]~input_o ),
	.datab(\e[6]~input_o ),
	.datac(\e[3]~input_o ),
	.datad(\e[2]~input_o ),
	.cin(gnd),
	.combout(\inst2~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst2~0 .lut_mask = 16'hFFFE;
defparam \inst2~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiv_io_ibuf \e[1]~input (
	.i(e[1]),
	.ibar(gnd),
	.o(\e[1]~input_o ));
// synopsys translate_off
defparam \e[1]~input .bus_hold = "false";
defparam \e[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_lcell_comb \inst1~0 (
// Equation(s):
// \inst1~0_combout  = (\e[7]~input_o ) # ((\e[5]~input_o ) # ((\e[3]~input_o ) # (\e[1]~input_o )))

	.dataa(\e[7]~input_o ),
	.datab(\e[5]~input_o ),
	.datac(\e[3]~input_o ),
	.datad(\e[1]~input_o ),
	.cin(gnd),
	.combout(\inst1~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst1~0 .lut_mask = 16'hFFFE;
defparam \inst1~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiv_io_ibuf \e[0]~input (
	.i(e[0]),
	.ibar(gnd),
	.o(\e[0]~input_o ));
// synopsys translate_off
defparam \e[0]~input .bus_hold = "false";
defparam \e[0]~input .simulate_z_as = "z";
// synopsys translate_on

assign s[2] = \s[2]~output_o ;

assign s[1] = \s[1]~output_o ;

assign s[0] = \s[0]~output_o ;

endmodule
